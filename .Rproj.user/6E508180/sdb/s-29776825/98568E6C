{
    "contents" : "# Define server logic required to draw figure\nlibrary(shiny)\n\nshinyServer(\n  function(input, output) \n  {    \n\n################################\n## population dynamic functions\n################################\n    ## length at age\nget_lengths <-function(Linf,k,t0,b,d,ages)\n{\n  Lengths_exp<-Linf*(1-exp(-k*b*(1-d)*(ages-t0)))^(1/(b*(1-d)))\n  return(Lengths_exp)\n}\n\n  ## selectivity at age\nget_selex <- function(aselex, ages){\n  Selex_a <- rep(0, length(ages))\n  Selex_a[which(ages>=aselex)] <- 1\n  return(Selex_a)\n}\n\n  ## numbers at age\nget_Na <- function(ages, aselex, surv, exploit, R0){\n  S_a <- get_selex(aselex, ages)\n  N_a <- rep(NA, length(ages))\n  N_a[1] <- R0\n  for(i in 2:length(ages)){\n    N_a[i] <- (1-S_a[i-1]*exploit)*surv*N_a[i-1]\n  }\n  return(N_a)\n}\n\n  ## weight at age\nget_weight <- function(ages, Linf,k,t0,lwa, lwb){\n  L_a <- get_lengths(Linf,k,t0,lwb,lwa,ages)\n  W_a <- sapply(1:length(L_a), function(x) lwa*L_a[x]^lwb)\n  return(W_a)\n}\n\n\n  ## proportion mature at age\nget_mature <- function(agemat, ages){\n  Mat_a <- rep(0, length(ages))\n  Mat_a[which(ages>=agemat)] <- 1\n  return(Mat_a)\n}\n\n\n  ## fecundity at age\nget_fec <- function(agemat, ages, Linf, k, t0, lwa, lwb){\n  Mat_a <- get_mature(agemat, ages)\n  weight <- get_weight(ages, Linf, k, t0, lwa, lwb)\n  Fec_a <- Mat_a*weight\n  return(Fec_a)\n}\n\n  ## spawning biomass at age\nget_SB <- function(ages, agemat, Linf, k, t0, lwa, lwb, aselex, surv, exploit, R0){\n  N_a <- get_Na(ages, aselex, surv, exploit, R0)\n  Fec_a <- get_fec(agemat, ages, Linf, k, t0, lwa, lwb)\n  \n  SB <- Fec_a*N_a\n  return(SB)\n}\n\n  ## catch at age\nget_catch <- function(ages, aselex, surv, exploit, R0, Linf,k,t0,lwa, lwb){\n  N_a <- get_Na(ages, aselex, surv, exploit, R0)\n  S_a <- get_selex(aselex, ages)\n  weight <- get_weight(ages, Linf, k, t0, lwa, lwb)\n  Cb_a <- N_a*S_a*exploit*weight\n  return(Cb_a)\n}\n\n  ## spawning biomass per recruit, either in the fished or unfished conditions\nget_SBPR <- function(agemat, Linf, k, t0, lwa, lwb, aselex, surv, exploit, R0, unfished, text){\n  ages <- c(1:input$amax)\n  SB <- get_SB(ages, agemat, Linf, k, t0, lwa, lwb, aselex, surv, exploit, R0)\n  SBPR <- sum(SB)/R0\n  if(text==TRUE & unfished==FALSE) return(paste0(\"SBPR(fished) = \", round(SBPR,0)))\n  if(text==TRUE & unfished==TRUE) return(paste0(\"SBPR(unfished) = \", round(SBPR,0)))\n  \n  if(text==FALSE) return(round(SBPR,0))\n}\n\n  ## spawning potential ratio\nget_SPR <- function(agemat, Linf, k, t0, lwa, lwb, aselex, surv, exploit, R0){\n  ages <- c(1:input$amax)\n  SBf <- get_SB(ages, agemat, Linf, k, t0, lwa, lwb, aselex, surv, exploit, R0)\n  SBPRf <- sum(SBf)/R0\n  \n  SB0 <- get_SB(ages, agemat, Linf, k, t0, lwa, lwb, aselex, surv, 0, R0)\n  SBPR0 <- sum(SB0)/R0\n  \n  return(paste0(\"SPR = \", round(SBPRf/SBPR0, 3)))\n}\n\n  ## yield per recruit\nget_YPR <- function(aselex, surv, exploit, Linf,k,t0,lwa, lwb, R0, text)\n{\n  ages <- c(1:input$amax)\n  Cb_a <- get_catch(ages, input$aselex, input$surv, input$u, 1, input$Linf, input$k, input$t0, input$d, input$b)\n  YPR <- sum(Cb_a)/R0 \n  if(text==TRUE) return(paste0(\"YPR = \", round(YPR,0)))\n  if(text==FALSE) return(YPR)\n}\n\nfind_Fref <- function(SBref, agemat, Linf, k, t0, lwa, lwb, aselex, surv, exploit, R0, unfished=FALSE, text=FALSE){\n  SBcalc <- get_SBPR(input$amat, input$Linf, input$k, input$t0, input$d, input$b, input$aselex, input$surv, exploit, 1, unfished=FALSE, text=FALSE)\n  SBdiff <- SBcalc - SBref\n  return(SBdiff)\n}\n\n################################\n## output\n################################\n\n## length\noutput$VBGFplot <- renderPlot(\n{\n  ages<-c(1:input$amax)\n  lengths.out<- get_lengths(input$Linf,input$k,input$t0,input$b,input$d,ages)\n  # plot VBGF\n  plot(ages, lengths.out, col = \"steelblue\",\n       xlab=\"Age\",ylab=\"Length (cm)\",xlim=c(0,input$amax),\n       ylim=c(0,input$Linf*1.1),type=\"l\",lwd=5,\n       main=\"Length at age\", xaxs=\"i\", yaxs=\"i\")\n}\n    )\n\n## numbers alive at age\noutput$NumbersAtAge <- renderPlot(\n{\n  ages <- c(1:input$amax)\n  N_a <- get_Na(ages, input$aselex, input$surv, input$u, 1)\n  ## plot numbers at age\n  plot(ages, N_a, col = \"darkgreen\",\n       xlab=\"Age\",ylab=\"Numbers Alive\",xlim=c(0,input$amax),\n       ylim=c(0,1.1),type=\"l\",lwd=5, main=\"Numbers at age\", xaxs=\"i\", yaxs=\"i\")\n  \n}\n  )\n\n## weight at age\noutput$WeightAtAge <- renderPlot(\n  {\n    ages <- c(1:input$amax)\n    W_a <- get_weight(ages, input$Linf, input$k, input$t0, input$d, input$b)\n    plot(ages, W_a, col=\"navyblue\", xlab=\"Age\", ylab=\"Weight (g)\",\n         xlim=c(0, input$amax), ylim=c(0, max(W_a)*1.1), type=\"l\", lwd=5,\n         main=\"Weight At Age\", xaxs=\"i\", yaxs=\"i\")\n  })\n\n\n## maturity at age\noutput$MatureAtAge <- renderPlot(\n{\n  ages <- c(1:input$amax)\n  Mat_a <- get_mature(input$amat, ages)\n  plot(ages, Mat_a, col=\"goldenrod\",\n       xlab=\"Age\", ylab=\"Proportion Mature\", xlim=c(0, input$amax),\n       ylim=c(0, max(Mat_a)*1.1), type=\"l\", lwd=5, main=\"Maturity at Age\", xaxs=\"i\", yaxs=\"i\")\n}\n  )\n\n## fecundity at age\noutput$FecundityAtAge <- renderPlot(\n  {\n    ages <- c(1:input$amax)\n    Fec_a <- get_fec(input$amat, ages, input$Linf, input$k, input$t0, input$d, input$b)\n    plot(ages, Fec_a, col = \"goldenrod4\",\n         xlab=\"Age\", ylab=\"Fecundity\", xlim=c(0, input$amax),\n         ylim=c(0,max(Fec_a)*1.1), type=\"l\", lwd=5, main=\"Fecundity at age\", xaxs=\"i\", yaxs=\"i\")\n  })\n\n\n## selectivity at age\noutput$SelexAtAge <- renderPlot(\n{\n  ages <- c(1:input$amax)\n  S_a <- get_selex(input$aselex, ages)\n  plot(ages, S_a, col = \"forestgreen\",\n       xlab=\"Age\", ylab=\"Selectivity\", xlim=c(0, input$amax),\n       ylim=c(0,max(S_a)*1.1), type=\"l\", lwd=5, main=\"Selectivity at age\", xaxs=\"i\", yaxs=\"i\")\n})\n\n\n## spawning biomass at age\noutput$SpawnBioAtAge <- renderPlot(\n{\n  ages <- c(1:input$amax)\n  SB <- get_SB(ages, input$amat, input$Linf, input$k, input$t0, input$d, input$b, input$aselex, input$surv, input$u, 1)\n  plot(ages, SB, col=\"tomato3\", xlim=c(0, input$amax),\n       ylim=c(0, max(SB)*1.1), type=\"l\", lwd=5, main=\"Spawning Biomass at age\", xaxs=\"i\", yaxs=\"i\")\n}\n  )\n\n## catch at age\noutput$CatchAtAge <- renderPlot(\n  {\n    ages <- c(1:input$amax)\n    Cb_a <- get_catch(ages, input$aselex, input$surv, input$u, 1, input$Linf, input$k, input$t0, input$d, input$b)\n    plot(ages, Cb_a, col=\"darkred\", xlim=c(0, input$amax), \n         ylim=c(0, max(Cb_a)*1.1), type=\"l\", lwd=5, main=\"Catch at age\", xaxs=\"i\", yaxs=\"i\")\n    \n  })\n\n## spawning biomass per recruit in fished condition\noutput$SBPRf <- renderText(\n  {\n    get_SBPR(input$amat, input$Linf, input$k, input$t0, input$d, input$b, input$aselex, input$surv, input$u, 1, unfished=FALSE, text=TRUE)\n  })\n\n\n## spawning biomass per recruit in unfished condition\noutput$SBPR0 <- renderText(\n  {\n    get_SBPR(input$amat, input$Linf, input$k, input$t0, input$d, input$b, input$aselex, input$surv, 0, 1, unfished=TRUE, text=TRUE)\n  })\n\n## spawning potential ratio\noutput$SPR <- renderText(\n  {\n    get_SPR(input$amat, input$Linf, input$k, input$t0, input$d, input$b, input$aselex, input$surv, input$u, 1)\n  })\n\n\n## yield per recruit\noutput$YPR <- renderText(\n  {\n    get_YPR(input$aselex, input$surv, input$u, input$Linf, input$k, input$t0, input$d, input$b, 1, text=TRUE)\n  }\n)\n\noutput$YPRplot <- renderPlot(\n  {\n    uvec <- seq(0,1, by=0.01)\n    YPRvec <- sapply(1:length(uvec), function(x) get_YPR(input$aselex, input$surv, uvec[x], input$Linf, input$k, input$t0, input$d, input$b, 1, text=FALSE))\n    plot(uvec, YPRvec, pch=19, cex=1.5, col=\"darkred\", xlim=c(min(uvec), max(uvec)), ylim=c(0, max(YPRvec)*1.1), \n         xlab=\"Exploitation Rate\", ylab=\"Yield Per Recruit\", xaxs=\"i\", yaxs=\"i\")\n  })\n\noutput$SBPRplot <- renderPlot(\n{\n  uvec <- seq(0,1, by=0.01)\n  SBPRvec <- sapply(1:length(uvec), function(x) get_SBPR(input$amat, input$Linf, input$k, input$t0, input$d, input$b, input$aselex, input$surv, uvec[x], 1, unfished=FALSE, text=FALSE))\n  plot(uvec, SBPRvec, pch=19, cex=1.5, col=\"tomato3\", xlim=c(min(uvec), max(uvec)), ylim=c(0, max(SBPRvec)*1.1),\n       xlab=\"Exploitation Rate\", ylab=\"Spawning Biomass Per Recruit\", xaxs=\"i\", yaxs=\"i\", main=\"Find Reference Point\")\n  SBref <- (input$Fref/100)*SBPRvec[1] ## target percentage of spawning biomass from unfished state\n  Fval <- uniroot(find_Fref, lower=uvec[1], upper=uvec[length(uvec)], SBref=SBref, agemat=input$amat, Linf=input$Linf, k=input$k, t0=input$t0, \n                  lwa=input$d, lwb=input$b, aselex=input$aselex, surv=input$surv, R0=1)$root  \n  segments(x0=0, x1=Fval, y0=SBref, y1=SBref, lty=2)\n  segments(x0=Fval, x1=Fval, y0=0, y1=SBref, lty=2)\n  points(x=Fval, y=SBref, pch=16, cex=2.5)\n\n})\n\n\n\n\n## end\n}\n)\n\n",
    "created" : 1456964659225.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2014354905",
    "id" : "98568E6C",
    "lastKnownWriteTime" : 1457058097,
    "path" : "C:/Git_Projects/per_recruit/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}